(setq projectPath "/home/boogie/git/pirates/")
(setq fileRegex "\".*\\.*\\(as\\|cpp\\|erl\\)\"")

(defun findAll () "Returns a list of all files"
	(setq cmd (concat "find " projectPath " -iregex " fileRegex))
	(setq result (shell-command-to-string cmd))
	(setq fileslist (split-string result "\n"))
	(mapcar '(lambda (arg)(replace-regexp-in-string ".*/" "" arg)) fileslist)
)

(defun find () "Searches for a file" (interactive)
       (setq files (findAll))       
       (setq file (completing-read "Find a file: " files nil t))       
       (setq cmd (concat "find " projectPath " -iname \"" file "\""))
       (setq result (shell-command-to-string cmd))
       (setq result (replace-regexp-in-string "\n" "" result))
       (find-file result)
)

(defun search (arg) "Searches for all occurences" (interactive "sSearch: ")
  (message "Type string: ")
  (setq cmd (concat "find " projectPath " -iregex " fileRegex " | xargs grep \"" arg "\" -n"))
  (setq result (shell-command-to-string cmd))
  (split-window)
  (let (buffer))	
  (setq buffer "*Search*")
  (get-buffer-create buffer)
  (set-buffer buffer)
  (erase-buffer)
  (insert result)
  (switch-to-buffer buffer)
)

(global-set-key (kbd "C-c C-f") 'find)
(global-set-key (kbd "C-c C-s") 'search)